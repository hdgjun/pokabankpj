/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poka.app.panel;

import com.poka.app.util.FileUploadMonitor;
import com.poka.util.PokaSftp;
import com.poka.util.StaticVar;
import com.poka.util.UploadFtp;
import com.poka.util.argPro;
import java.awt.Color;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author Administrator
 */
public class ReUpLoadJPanel extends javax.swing.JPanel {

    /**
     * Creates new form reUpLoadJPane
     */
    public ReUpLoadJPanel() {
        initComponents();
        this.fileProgressBar.setVisible(false);
        this.fileProgressBar.setValue(0);
        this.fileProgressBar.setOrientation(JProgressBar.HORIZONTAL);
        this.fileProgressBar.setStringPainted(true);
        this.fileProgressBar.setBorderPainted(true);
        this.fileProgressBar.setBackground(Color.pink);
        msgLabel.setForeground(Color.red);
         path= StaticVar.cfgMap.get(argPro.localAddr) + File.separator + UploadFtp.reUpload;
        if (path != null) {
            this.refreshFile(path);
        }
    }
    String path;
    public final void refreshFile(String path) {
        File dir = new File(path.trim());
        File[] files = dir.listFiles();

        //this.fielList.setModel(modle);
        if (files == null) {
            return;
        }
        DefaultListModel modle = new DefaultListModel();
        for (int i = 0; i < files.length && modle.getSize() < 5000; i++) {
            if (files[i].isDirectory()) {
            } else {
                modle.addElement(files[i].getName());
            }
        }
        msgLabel.setText("文件个数：" + modle.getSize());
        this.fielList.setModel(modle);
        this.fielList.invalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fielList = new javax.swing.JList();
        messageLabel = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        fileProgressBar = new com.poka.app.util.FileUploadMonitor();
        msgLabel = new javax.swing.JLabel();

        jScrollPane1.setViewportView(fielList);

        messageLabel.setText("未上传到前置机文件：");

        uploadButton.setText("上传");
        uploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(uploadButton))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(msgLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fileProgressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(uploadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 345, Short.MAX_VALUE)))
                .addComponent(fileProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void uploadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseClicked
       if(uploadButton.isEnabled()){
        Thread tt = new Thread(new Runnable() {
            public void run() {
                uploadButton.setEnabled(false);
                DefaultListModel modle = (DefaultListModel) fielList.getModel();
                fileProgressBar.setToolTipText("文件上传中.....");
                //将生成的pokafsn文件上传到前置机
                PokaSftp sftp = new PokaSftp();
                boolean flag = false;
                int count = 0;
                int error = 0;
                String tem =StaticVar.cfgMap.get(argPro.ftp);
                sftp.connect(StaticVar.cfgMap.get(argPro.ftp), Integer.valueOf(StaticVar.cfgMap.get(argPro.port)), StaticVar.cfgMap.get(argPro.user), StaticVar.cfgMap.get(argPro.pwd), 6000);
                if (sftp.getSftp() == null) {
                    JOptionPane.showMessageDialog(null, "连接服务器失败，请检查配置是否正确！");
                    uploadButton.setEnabled(true);
                    return;
                }
                int co = modle.getSize();
                fileProgressBar.setVisible(true);
                String fileType = "";
                for (int i = 0; i < co; i++) {
                    String file = (String) modle.getElementAt(0);
                    if (file.endsWith(".FSN")) {
                        fileType = UploadFtp.fsnbak;
                    } else if (file.endsWith(".BK")) {
                        fileType = UploadFtp.bkbak;
                    } else if (file.endsWith(".CT")) {
                        fileType = UploadFtp.ctbak;
                    } else if (file.endsWith(".BF")) {
                        fileType = UploadFtp.bfbak;
                    }
                    flag = UploadFtp.againFileUploadFtp(file, fileType, (FileUploadMonitor) fileProgressBar, sftp);
                    if (flag) {//上传成功，备份poka fsn文件
                        count++;
                    } else {//上传失败，不处理poka fsn文件
                        error++;
                    }
                    modle.removeElementAt(0);
                }
                sftp.disConnect();
                msgLabel.setText("文件上传完成！");
                fileProgressBar.setVisible(false);
                // fielList.setModel(null);
                fielList.invalidate();
                uploadButton.setEnabled(true);
                
                refreshFile(path);
            }
        ;
        });
        tt.start();
       }
    }//GEN-LAST:event_uploadButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList fielList;
    private javax.swing.JProgressBar fileProgressBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel msgLabel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
