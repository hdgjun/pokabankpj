package com.poka.app.panel;

import com.poka.entity.BmpPic;
import com.poka.entity.ImageSno;
import com.poka.entity.PokaFsn;
import com.poka.entity.PokaFsnBody;
import com.poka.util.Fsnfilter;
import com.poka.util.LogManager;
import com.poka.util.StaticVar;
import com.poka.util.argPro;
import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ShowJPanel extends javax.swing.JPanel {

    static final Logger logger = LogManager.getLogger(ShowJPanel.class);
    /**
     * Creates new form showJPane
     */
    public ShowJPanel() {
        initComponents();
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();// 设置table内容居中  
        // tcr.setHorizontalAlignment(JLabel.CENTER);  
        tcr.setHorizontalAlignment(SwingConstants.CENTER);// 这句和上句作用一样  
        baseTable.setDefaultRenderer(Object.class, tcr);  
        pokaTable.setDefaultRenderer(Object.class, tcr);  
        this.GuanzihaoBgjPanel.setVisible(false);
        
        this.pokabgjPanel.setVisible(false);
        
        pokabgjPanel.setLayout(new GridLayout(1,1));  
        GuanzihaoBgjPanel.setLayout(new GridLayout(1,1)); 
        jfc.setDialogTitle("Open fsn file");
        jfc.setFileFilter(new Fsnfilter("FSN", "fsn文件"));
        String path = StaticVar.cfgMap.get(argPro.localAddr);
        if(path != null){
            jfc.setSelectedFile(new File(path));
        }
           
    }
    
    public void removeall(){
        ((DefaultTableModel)pokaTable.getModel()).setRowCount(0);
        pokaTable.invalidate();
       // baseTable.removeAll();
       // baseTable.repaint();
        ((DefaultTableModel)baseTable.getModel()).setRowCount(0);
        baseTable.invalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        basePathTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        selectBaseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        baseTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        GuanzihaoBgjPanel = new javax.swing.JPanel();
        baImage1 = new javax.swing.JLabel();
        baImage2 = new javax.swing.JLabel();
        baImage3 = new javax.swing.JLabel();
        baImage4 = new javax.swing.JLabel();
        baImage5 = new javax.swing.JLabel();
        baImage6 = new javax.swing.JLabel();
        baImage7 = new javax.swing.JLabel();
        baImage8 = new javax.swing.JLabel();
        baImage9 = new javax.swing.JLabel();
        baImage10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pokaTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        filePathTextField = new javax.swing.JTextField();
        selectFileButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pokabgjPanel = new javax.swing.JPanel();
        pokaImage2 = new javax.swing.JLabel();
        pokaImage3 = new javax.swing.JLabel();
        pokaImage4 = new javax.swing.JLabel();
        pokaImage5 = new javax.swing.JLabel();
        pokaImage6 = new javax.swing.JLabel();
        pokaImage7 = new javax.swing.JLabel();
        pokaImage8 = new javax.swing.JLabel();
        pokaImage9 = new javax.swing.JLabel();
        pokaImage10 = new javax.swing.JLabel();
        pokaImage1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1024, 700));
        setMinimumSize(new java.awt.Dimension(1024, 700));
        setPreferredSize(new java.awt.Dimension(1024, 700));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1024, 768));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1024, 768));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1024, 768));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setAutoscrolls(true);
        jPanel2.setMaximumSize(new java.awt.Dimension(1024, 700));
        jPanel2.setMinimumSize(new java.awt.Dimension(1024, 700));
        jPanel2.setPreferredSize(new java.awt.Dimension(1024, 700));

        basePathTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        basePathTextField.setEnabled(false);

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("标准FSN文件路径:");

        selectBaseButton.setText("选择文件");
        selectBaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectBaseButtonMouseClicked(evt);
            }
        });
        selectBaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBaseButtonActionPerformed(evt);
            }
        });

        baseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "冠字号码", "机具号", "真假币特征", "币种", "版本", "面值", "清点时间", "真假币标志"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        baseTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        baseTable.getTableHeader().setReorderingAllowed(false);
        baseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                baseTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                baseTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(baseTable);
        if (baseTable.getColumnModel().getColumnCount() > 0) {
            baseTable.getColumnModel().getColumn(0).setPreferredWidth(110);
            baseTable.getColumnModel().getColumn(1).setPreferredWidth(180);
            baseTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            baseTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            baseTable.getColumnModel().getColumn(4).setPreferredWidth(80);
            baseTable.getColumnModel().getColumn(5).setPreferredWidth(60);
            baseTable.getColumnModel().getColumn(6).setPreferredWidth(150);
            baseTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        GuanzihaoBgjPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout GuanzihaoBgjPanelLayout = new javax.swing.GroupLayout(GuanzihaoBgjPanel);
        GuanzihaoBgjPanel.setLayout(GuanzihaoBgjPanelLayout);
        GuanzihaoBgjPanelLayout.setHorizontalGroup(
            GuanzihaoBgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GuanzihaoBgjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(baImage1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage5, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage6, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage7, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(baImage8, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baImage9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(baImage10, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        GuanzihaoBgjPanelLayout.setVerticalGroup(
            GuanzihaoBgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GuanzihaoBgjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GuanzihaoBgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(baImage10, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(baImage9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(baImage7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jLabel8.setText("冠字号图片:");

        jLabel6.setText("冠字号条数:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(31, 31, 31)
                .addComponent(GuanzihaoBgjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(GuanzihaoBgjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(basePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(selectBaseButton))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(selectBaseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("标准FSN文件", jPanel2);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setMaximumSize(new java.awt.Dimension(1024, 700));
        jPanel1.setMinimumSize(new java.awt.Dimension(1024, 700));
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 700));

        pokaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "冠字号码", "机具编号", "真假币特征", "币种", "版本", "面值", "捆ID", "真假币标志", "清点时间", "打把员", "复核员", "钞箱ID", "ATMID", "加钞员", "监督员"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pokaTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        pokaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pokaTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(pokaTable);
        if (pokaTable.getColumnModel().getColumnCount() > 0) {
            pokaTable.getColumnModel().getColumn(0).setResizable(false);
            pokaTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            pokaTable.getColumnModel().getColumn(1).setResizable(false);
            pokaTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            pokaTable.getColumnModel().getColumn(2).setResizable(false);
            pokaTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            pokaTable.getColumnModel().getColumn(3).setResizable(false);
            pokaTable.getColumnModel().getColumn(3).setPreferredWidth(70);
            pokaTable.getColumnModel().getColumn(4).setResizable(false);
            pokaTable.getColumnModel().getColumn(4).setPreferredWidth(70);
            pokaTable.getColumnModel().getColumn(5).setResizable(false);
            pokaTable.getColumnModel().getColumn(5).setPreferredWidth(70);
            pokaTable.getColumnModel().getColumn(6).setResizable(false);
            pokaTable.getColumnModel().getColumn(6).setPreferredWidth(200);
            pokaTable.getColumnModel().getColumn(7).setResizable(false);
            pokaTable.getColumnModel().getColumn(7).setPreferredWidth(70);
            pokaTable.getColumnModel().getColumn(8).setResizable(false);
            pokaTable.getColumnModel().getColumn(8).setPreferredWidth(200);
            pokaTable.getColumnModel().getColumn(9).setResizable(false);
            pokaTable.getColumnModel().getColumn(9).setPreferredWidth(100);
            pokaTable.getColumnModel().getColumn(10).setResizable(false);
            pokaTable.getColumnModel().getColumn(10).setPreferredWidth(100);
            pokaTable.getColumnModel().getColumn(11).setResizable(false);
            pokaTable.getColumnModel().getColumn(11).setPreferredWidth(250);
            pokaTable.getColumnModel().getColumn(12).setResizable(false);
            pokaTable.getColumnModel().getColumn(12).setPreferredWidth(250);
            pokaTable.getColumnModel().getColumn(13).setResizable(false);
            pokaTable.getColumnModel().getColumn(13).setPreferredWidth(100);
            pokaTable.getColumnModel().getColumn(14).setResizable(false);
            pokaTable.getColumnModel().getColumn(14).setPreferredWidth(100);
        }

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("扩展FSN文件路径:");

        filePathTextField.setAutoscrolls(false);
        filePathTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        filePathTextField.setEnabled(false);

        selectFileButton.setText("选择文件");
        selectFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectFileButtonMouseClicked(evt);
            }
        });
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("冠字号条数:");

        jLabel9.setText("冠字号图片:");

        pokabgjPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pokabgjPanelLayout = new javax.swing.GroupLayout(pokabgjPanel);
        pokabgjPanel.setLayout(pokabgjPanelLayout);
        pokabgjPanelLayout.setHorizontalGroup(
            pokabgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pokabgjPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(pokaImage1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage4, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage5, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage6, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage7, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage8, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage9, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokaImage10, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
        );
        pokabgjPanelLayout.setVerticalGroup(
            pokabgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pokabgjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pokabgjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(pokaImage2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(pokaImage3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(pokabgjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pokabgjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        pokabgjPanel.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectFileButton)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectFileButton))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("扩展FSN文件", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void baseTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_baseTableMouseEntered

    private void baseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseTableMouseClicked
        this.GuanzihaoBgjPanel.setVisible(true);
        if (baseLa != baseTable.getSelectedRow()) {
            GuanzihaoBgjPanel.removeAll();
            try {
                if ((byte) (baseFsn.getFhead().getHeadString()[2]) == 0x2E) {
                    int he = baseFsn.getbList().get(baseTable.getSelectedRow()).getImageSNo().getHeight();
                    int we = baseFsn.getbList().get(baseTable.getSelectedRow()).getImageSNo().getWidth();
                    ImageSno sn = baseFsn.getbList().get(baseTable.getSelectedRow()).getImageSNo();
                    BufferedImage tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[0].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage1.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[1].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage2.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[2].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage3.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[3].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage4.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[4].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage5.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[5].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage6.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[6].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage7.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[7].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage8.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[8].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage9.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[9].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        baImage10.setIcon(new ImageIcon(tem));
                    }
                } else {
                    baImage1.setIcon(null);
                    baImage2.setIcon(null);
                    baImage3.setIcon(null);
                    baImage4.setIcon(null);
                    baImage5.setIcon(null);
                    baImage6.setIcon(null);
                    baImage7.setIcon(null);
                    baImage8.setIcon(null);
                    baImage9.setIcon(null);
                    baImage10.setIcon(null);
                }
            } catch (Exception e) {
                e.printStackTrace();
                baImage1.setIcon(null);
                baImage2.setIcon(null);
                baImage3.setIcon(null);
                baImage4.setIcon(null);
                baImage5.setIcon(null);
                baImage6.setIcon(null);
                baImage7.setIcon(null);
                baImage8.setIcon(null);
                baImage9.setIcon(null);
                baImage10.setIcon(null);
            }
              
            GuanzihaoBgjPanel.add(baImage1);
            GuanzihaoBgjPanel.add(baImage2);
            GuanzihaoBgjPanel.add(baImage3);
            GuanzihaoBgjPanel.add(baImage4);
            GuanzihaoBgjPanel.add(baImage5);
            GuanzihaoBgjPanel.add(baImage6);
            GuanzihaoBgjPanel.add(baImage7);
            GuanzihaoBgjPanel.add(baImage8);
            GuanzihaoBgjPanel.add(baImage9);
            GuanzihaoBgjPanel.add(baImage10);
            GuanzihaoBgjPanel.repaint();    
        }
        baseLa = baseTable.getSelectedRow();
    }//GEN-LAST:event_baseTableMouseClicked

    private void selectBaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBaseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectBaseButtonActionPerformed

    /**
     * 显示标准FSN文件数据
     *
     * @param evt
     */
    JFileChooser jfc = new JFileChooser();
    
    private void selectBaseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectBaseButtonMouseClicked
        baseLa = -1;
        
        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                String file = jfc.getSelectedFile().getPath();
                this.basePathTextField.setText(file);
                PokaFsn pFsn = new PokaFsn();
                pFsn.readBaseFsnFile(file);
                //TableColumn tem = new TableColumn();
                DefaultTableModel tableModel = (DefaultTableModel) baseTable.getModel();
                //DefaultTableModel pokaModel = (DefaultTableModel) pokaTable.getModel();
                tableModel.setRowCount(0);
                //pokaModel.setRowCount(0);
                int col = baseTable.getColumnCount();
                //   int col2 =  pokaTable.getColumnCount();

                String[] newRow = new String[col];
                // String[] newRow2 = new String[col2];

                List<PokaFsnBody> bd = pFsn.getbList();
                int count = 0;
                for (PokaFsnBody b : bd) {
                    count++;
                    newRow[0] = b.getsNo();
                    newRow[1] = b.getMacinSno();
                    //    newRow2[0] = b.getDate() + " " + b.getTime();

                    switch (b.getTfFlag()) {
                        case "0":
                        newRow[7] = "假币或可以币";
                        break;
                        case "1":
                        newRow[7] = "真币";
                        break;
                        case "2":
                        newRow[7] = "残币";
                        break;
                        default:
                        newRow[7] = b.getTfFlag();
                    }
                    byte[] by = b.getErrorCode();
                    switch (by[0] & 0x0F) {
                        case 2:
                        newRow[2] = "号码伪钞";
                        break;
                        case 4:
                        newRow[2] = "红外伪钞";
                        break;
                        case 8:
                        newRow[2] = "白光伪钞";
                        break;
                    }
                    switch (by[1] & 0xFF) {
                        case 1:
                        newRow[2] = "安全线";
                        break;
                        case 2:
                        newRow[2] = "荧光";
                        break;
                        case 4:
                        newRow[2] = "磁特征伪";
                        break;
                        case 8:
                        newRow[2] = "紫外伪";
                        break;
                        case 16:
                        newRow[2] = "红外反射";
                        break;
                        case 32:
                        newRow[2] = "此图像";
                        break;
                        case 64:
                        newRow[2] = "其他";
                        break;
                        default:
                        newRow[2] = "0";
                        break;
                    }

                    newRow[3] = b.getMoneyFlag();

                    switch (b.getVer()) {
                        case 0:
                        newRow[4] = "1990年版";
                        break;
                        case 1:
                        newRow[4] = "1999年版";
                        break;
                        case 2:
                        newRow[4] = "2005年版";
                        break;
                        default:
                        newRow[4] = "其余币种";
                    }

                    newRow[5] = "" + b.getValuta();

                    newRow[6] = b.getDate() + " " + b.getTime();

                    tableModel.addRow(newRow);

                }
                baseTable.invalidate();
                baseFsn = pFsn;
                this.jLabel6.setText("冠字号条数："+count);
              //  this.jLabel7.setText(String.valueOf(count));
            } catch (IOException ex) {
                  logger.log(Level.INFO, null,ex);
            }
        }
    }//GEN-LAST:event_selectBaseButtonMouseClicked

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed

    }//GEN-LAST:event_selectFileButtonActionPerformed

    /**
     * 显示标准FSN文件数据
     *
     * @param evt
     */
    private void selectFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectFileButtonMouseClicked
        pokaLa = -1;
        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                String file = jfc.getSelectedFile().getPath();
                this.filePathTextField.setText(file);
                PokaFsn pFsn = new PokaFsn();
                pFsn.readPokaFsnFile(file);
                // TableColumn tem = new TableColumn();

                DefaultTableModel pokaModel = (DefaultTableModel) pokaTable.getModel();

                pokaModel.setRowCount(0);

                int col2 = pokaTable.getColumnCount();

                String[] newRow2 = new String[col2];

                List<PokaFsnBody> bd = pFsn.getbList();
                int count = 0;
                for (PokaFsnBody b : bd) {
                    count++;
                    newRow2[0] = b.getsNo();
                    newRow2[1] = b.getMacinSno();

                    switch (b.getTfFlag()) {
                        case "0":
                        newRow2[7] = "假币或可以币";
                        break;
                        case "1":
                        newRow2[7] = "真币";
                        break;
                        case "2":
                        newRow2[7] = "残币";
                        break;
                        default:
                        newRow2[7] = b.getTfFlag();
                    }
                    byte[] by = b.getErrorCode();
                    switch (by[0] & 0x0F) {
                        case 2:
                        newRow2[2] = "号码伪钞";
                        break;
                        case 4:
                        newRow2[2] = "红外伪钞";
                        break;
                        case 8:
                        newRow2[2] = "白光伪钞";
                        break;
                    }
                    switch (by[1] & 0xFF) {
                        case 1:
                        newRow2[2] = "安全线";
                        break;
                        case 2:
                        newRow2[2] = "荧光";
                        break;
                        case 4:
                        newRow2[2] = "磁特征伪";
                        break;
                        case 8:
                        newRow2[2] = "紫外伪";
                        break;
                        case 16:
                        newRow2[2] = "红外反射";
                        break;
                        case 32:
                        newRow2[2] = "此图像";
                        break;
                        case 64:
                        newRow2[2] = "其他";
                        break;
                        default:
                        newRow2[2] = "0";
                        break;
                    }

                    newRow2[3] = b.getMoneyFlag();

                    switch (b.getVer()) {
                        case 0:
                        newRow2[4] = "1990年版";
                        break;
                        case 1:
                        newRow2[4] = "1999年版";
                        break;
                        case 2:
                        newRow2[4] = "2005年版";
                        break;
                        default:
                        newRow2[4] = "其余币种";
                    }

                    newRow2[5] = "" + b.getValuta();

                    newRow2[6] = b.getBundleId();

                    newRow2[8] = b.getDate() + " " + b.getTime();
                    newRow2[9] = b.getUserId1();
                    newRow2[10] = b.getUserId2();
                    newRow2[11] = b.getBagId();
                    newRow2[12] = b.getAtmId();
                    newRow2[13] = b.getUserId3();
                    newRow2[14] = b.getUserId4();

                    pokaModel.addRow(newRow2);

                }

                pokaTable.invalidate();
                pokaFsn = pFsn;
                this.jLabel4.setText("冠字号条数："+count);
            //    this.jLabel3.setText("" + count);
            } catch (IOException ex) {
                 logger.log(Level.INFO, null,ex);
            }
        }
    }//GEN-LAST:event_selectFileButtonMouseClicked

    /**
     * poka表格点击
     *
     * @param evt
     */
    private void pokaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pokaTableMouseClicked
        this.pokabgjPanel.setVisible(true);
        if (pokaLa != pokaTable.getSelectedRow()) {
            pokabgjPanel.removeAll();
            try {
                if ((byte) (pokaFsn.getFhead().getHeadString()[2]) == 0x2E) {
                    int he = pokaFsn.getbList().get(pokaTable.getSelectedRow()).getImageSNo().getHeight();
                    int we = pokaFsn.getbList().get(pokaTable.getSelectedRow()).getImageSNo().getWidth();
                    ImageSno sn = pokaFsn.getbList().get(pokaTable.getSelectedRow()).getImageSNo();
                    BufferedImage tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[0].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage1.setIcon(new ImageIcon(tem));
                    }

                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[1].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage2.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[2].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage3.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[3].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage4.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[4].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage5.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[5].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage6.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[6].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage7.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[7].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage8.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[8].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage9.setIcon(new ImageIcon(tem));
                    }
                    tem = ImageIO.read(new ByteArrayInputStream(new BmpPic(he, we, sn.getsN0()[9].getData()).getBmpData(), 0, he * we));
                    if (tem != null) {
                        pokaImage10.setIcon(new ImageIcon(tem));
                    }
                } else {
                    pokaImage1.setIcon(null);
                    pokaImage2.setIcon(null);
                    pokaImage3.setIcon(null);
                    pokaImage4.setIcon(null);
                    pokaImage5.setIcon(null);
                    pokaImage6.setIcon(null);
                    pokaImage7.setIcon(null);
                    pokaImage8.setIcon(null);
                    pokaImage9.setIcon(null);
                    pokaImage10.setIcon(null);
                }
            } catch (Exception e) {
                e.printStackTrace();
                pokaImage1.setIcon(null);
                pokaImage2.setIcon(null);
                pokaImage3.setIcon(null);
                pokaImage4.setIcon(null);
                pokaImage5.setIcon(null);
                pokaImage6.setIcon(null);
                pokaImage7.setIcon(null);
                pokaImage8.setIcon(null);
                pokaImage9.setIcon(null);
                pokaImage10.setIcon(null);
            }
            
             
            pokabgjPanel.add(pokaImage1);
            pokabgjPanel.add(pokaImage2);
            pokabgjPanel.add(pokaImage3);
            pokabgjPanel.add(pokaImage4);
            pokabgjPanel.add(pokaImage5);
            pokabgjPanel.add(pokaImage6);
            pokabgjPanel.add(pokaImage7);
            pokabgjPanel.add(pokaImage8);
            pokabgjPanel.add(pokaImage9);
            pokabgjPanel.add(pokaImage10);
            pokabgjPanel.repaint();
        }
        pokaLa = pokaTable.getSelectedRow();
    }//GEN-LAST:event_pokaTableMouseClicked

    private PokaFsn pokaFsn = null;
    private PokaFsn baseFsn = null;
    private int pokaLa = -1;
    private int baseLa = -1;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GuanzihaoBgjPanel;
    private javax.swing.JLabel baImage1;
    private javax.swing.JLabel baImage10;
    private javax.swing.JLabel baImage2;
    private javax.swing.JLabel baImage3;
    private javax.swing.JLabel baImage4;
    private javax.swing.JLabel baImage5;
    private javax.swing.JLabel baImage6;
    private javax.swing.JLabel baImage7;
    private javax.swing.JLabel baImage8;
    private javax.swing.JLabel baImage9;
    private javax.swing.JTextField basePathTextField;
    private javax.swing.JTable baseTable;
    private javax.swing.JTextField filePathTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel pokaImage1;
    private javax.swing.JLabel pokaImage10;
    private javax.swing.JLabel pokaImage2;
    private javax.swing.JLabel pokaImage3;
    private javax.swing.JLabel pokaImage4;
    private javax.swing.JLabel pokaImage5;
    private javax.swing.JLabel pokaImage6;
    private javax.swing.JLabel pokaImage7;
    private javax.swing.JLabel pokaImage8;
    private javax.swing.JLabel pokaImage9;
    private javax.swing.JTable pokaTable;
    private javax.swing.JPanel pokabgjPanel;
    private javax.swing.JButton selectBaseButton;
    private javax.swing.JButton selectFileButton;
    // End of variables declaration//GEN-END:variables
}
