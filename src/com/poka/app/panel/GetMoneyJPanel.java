/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poka.app.panel;

import com.poka.printer.com.ComClient;
import com.poka.serialport.PortListener;
import com.poka.util.BundleDeal;
import com.poka.util.LogManager;
import com.poka.util.StaticVar;
import com.poka.util.UploadFtp;
import com.poka.util.XmlSax;
import com.poka.util.argPro;
import gnu.io.CommPortIdentifier;
import gnu.io.NoSuchPortException;
import gnu.io.PortInUseException;
import gnu.io.UnsupportedCommOperationException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author poka
 */
public class GetMoneyJPanel extends javax.swing.JPanel implements ActionListener, FocusListener {

    static final Logger logger = LogManager.getLogger(GetMoneyJPanel.class);
    /**
     * Creates new form getMoneyJPanel
     */
    public GetMoneyJPanel() {
        initComponents();
        this.xml = XmlSax.getInstance();
        this.kunjTextField.addActionListener(this);
        this.guiyuanidjTextField.addActionListener(this);
        this.guitaiidjTextField.addActionListener(this);

        this.promptjLabel.setVisible(false);

        popupmenu = new JPopupMenu();
        delete = new JMenuItem("删除");

        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DefaultTableModel pokaModel = (DefaultTableModel) kunjTable.getModel();
                //System.out.println("shenme:" + showTable.getSelectedRow());
                int index = kunjTable.getSelectedRow();
                if (index >= 0 && index < pokaModel.getRowCount()) {
                    pokaModel.removeRow(index);
                    kunjTable.invalidate();
                }

            }
        });
        popupmenu.add(delete);

        itemFlag = false;
        CommPortIdentifier portId = null;
        Enumeration portIdentifier = ComClient.getSerialPorts();
        while (portIdentifier.hasMoreElements()) {
            portId = (CommPortIdentifier) portIdentifier.nextElement();
            if (portId.getPortType() == CommPortIdentifier.PORT_SERIAL) {
                this.comComboBox.addItem(portId.getName());
            }
        }
        String sItem = this.xml.getLastAddCom().trim();
        this.comComboBox.setEditable(false);
        if (sItem != null) {
            this.comComboBox.setSelectedItem(sItem);
        }
        itemFlag = true;
        String lo = this.xml.getLocatNO().trim();
        if (lo.length() > 0) {
            this.localHostTextField.setText(lo);
        } else {
            this.localHostTextField.setText("1");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        guiyuanidjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        shenchengFilejButton = new javax.swing.JButton();
        kunjTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        guitaiidjTextField = new javax.swing.JTextField();
        promptjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kunjTable = new javax.swing.JTable();
        openComToggleButton = new javax.swing.JToggleButton();
        comComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        localHostTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setMaximumSize(new java.awt.Dimension(567, 440));
        setMinimumSize(new java.awt.Dimension(567, 440));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setMaximumSize(new java.awt.Dimension(547, 358));
        jPanel1.setMinimumSize(new java.awt.Dimension(547, 358));

        jLabel4.setText("柜员ID:");

        shenchengFilejButton.setText("完成");
        shenchengFilejButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shenchengFilejButtonMouseClicked(evt);
            }
        });

        kunjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kunjTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("捆标签扫描:");

        jLabel5.setText("*输入捆标签后请按回车键");

        jLabel6.setText("柜台号:");

        promptjLabel.setForeground(new java.awt.Color(255, 0, 51));
        promptjLabel.setText("请输入24位捆标签");

        kunjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "捆标签"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kunjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kunjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(kunjTable);
        if (kunjTable.getColumnModel().getColumnCount() > 0) {
            kunjTable.getColumnModel().getColumn(0).setResizable(false);
        }

        openComToggleButton.setText("开启");
        openComToggleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openComToggleButtonMouseClicked(evt);
            }
        });

        comComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comComboBoxItemStateChanged(evt);
            }
        });

        jLabel9.setText("扫描抢COM口:");

        com.poka.util.LimitDocument lit3 = new com.poka.util.LimitDocument(5);
        lit3.setAllowChar("0123456789");
        localHostTextField.setDocument(lit3);

        jLabel10.setText("本地编号:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(promptjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(kunjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(guiyuanidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guitaiidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(localHostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(openComToggleButton))
                            .addComponent(shenchengFilejButton))))
                .addGap(68, 68, 68))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(guiyuanidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(guitaiidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(localHostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openComToggleButton))
                .addGap(29, 29, 29)
                .addComponent(shenchengFilejButton)
                .addGap(76, 76, 76))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(promptjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kunjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void shenchengFilejButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shenchengFilejButtonMouseClicked
        int rowCount = this.kunjTable.getRowCount();
        if (rowCount == 0) {
            JOptionPane.showMessageDialog(null, "请输入捆ID");
            this.kunjTextField.requestFocus();
            return;
        }
        String[] kunArr = new String[rowCount];
        for (int i = 0; i < rowCount; i++) {
            kunArr[i] = kunjTable.getValueAt(i, 0).toString();
        }
        String guiyuanid = this.guiyuanidjTextField.getText();
        if (guiyuanid.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "请输入柜员ID");
            this.guiyuanidjTextField.requestFocus();
            return;
        }
        String guitaiid = this.guitaiidjTextField.getText();
        if (guitaiid.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "请输入柜台号");
            this.guitaiidjTextField.requestFocus();
            return;
        }

        Date d = BundleDeal.getDBTime();
        String date = new SimpleDateFormat("yyyyMMddHHmmssS").format(d);
        String fileName = StaticVar.bankId + "_" + StaticVar.agencyNo + "_XXXXXXXXXXXXXX_XXXXXXX" + date + "_" + guitaiid + ".CT";
        String path = StaticVar.cfgMap.get(argPro.localAddr) + File.separator + UploadFtp.tem + File.separator + fileName;
        List<BundleDeal> list = new ArrayList<BundleDeal>();
        BundleDeal b1 = null;
        Date mydate = null;
        for (int i = 0; i < kunArr.length; i++) {
            b1 = new BundleDeal();
            b1.setBunId(kunArr[i].toUpperCase());
            b1.setGuitaiId(guiyuanid);
            b1.setOpedate(buildKunDate.get(i));
            list.add(b1);
        }
        buildKunDate.clear();
        BundleDeal.writeCTFile(list, path);
        JOptionPane.showMessageDialog(null, "文件生成成功");
        //将生成的pokafsn文件上传到前置机
        UploadFtp.oneFileUploadFtp(fileName, UploadFtp.ctbak);
        ((DefaultTableModel) kunjTable.getModel()).setRowCount(0);
    }//GEN-LAST:event_shenchengFilejButtonMouseClicked


    private void kunjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kunjTextFieldActionPerformed

    }//GEN-LAST:event_kunjTextFieldActionPerformed

    private void kunjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kunjTableMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            popupmenu.show(evt.getComponent(), evt.getX(), evt.getY());
            System.out.println(evt.getButton() + "--" + evt.getX());
            System.out.println(MouseEvent.BUTTON3 + "--" + evt.getY());
        }
    }//GEN-LAST:event_kunjTableMouseClicked
    Thread portThread = null;
    String addres = "";
    private void openComToggleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openComToggleButtonMouseClicked
        if (this.openComToggleButton.isSelected()) {
            addres = this.localHostTextField.getText().trim();
            if (addres.length() <= 0) {
                return;
            }
            portThread = new Thread(new Runnable() {
                public void run() {
                    try {
                        portLis = new PortListener((String) comComboBox.getSelectedItem(), addres);
                    } catch (PortInUseException | IOException | UnsupportedCommOperationException | ClassNotFoundException | InstantiationException | IllegalAccessException | NoSuchPortException ex) {
                        logger.log(Level.INFO, null,ex);
                    }
                }
            ;
            });
            portThread.start();
            this.openComToggleButton.setText("关闭");
        } else {
            try {
                if (portLis != null) {
                    portLis.close();
                    portLis = null;
                }
                portThread.interrupt();
                portThread.join();
                this.openComToggleButton.setText("开启");
            } catch (InterruptedException ex) {
               logger.log(Level.INFO, null,ex);
            }
        }
    }//GEN-LAST:event_openComToggleButtonMouseClicked

    private void comComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comComboBoxItemStateChanged
        if (itemFlag) {
            String com = (String) this.comComboBox.getSelectedItem();
            this.xml.setLastAddCom(com);
        }
    }//GEN-LAST:event_comComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comComboBox;
    private javax.swing.JTextField guitaiidjTextField;
    private javax.swing.JTextField guiyuanidjTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable kunjTable;
    private javax.swing.JTextField kunjTextField;
    private javax.swing.JTextField localHostTextField;
    private javax.swing.JToggleButton openComToggleButton;
    private javax.swing.JLabel promptjLabel;
    private javax.swing.JButton shenchengFilejButton;
    // End of variables declaration//GEN-END:variables
    private String temPath;
    private JPopupMenu popupmenu;
    private JMenuItem delete;
    private List<String> buildKunDate = new ArrayList<String>();
    private PortListener portLis = null;
    private boolean itemFlag = false;
    private XmlSax xml;

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.kunjTextField) {
            String kunVal = this.kunjTextField.getText().trim();
            if (kunVal.equals("")) {
                return;
            }
            int len = kunVal.length();
            if (len != 24) {
                this.promptjLabel.setVisible(true);
                this.kunjTextField.selectAll();
                return;
            }
            this.kunjTextField.setText("");
            String[] newrow = new String[1];
            newrow[0] = kunVal;
            int rowCount = this.kunjTable.getRowCount();
            if (rowCount != 0) {
                String temkun;
                for (int i = 0; i < rowCount; i++) {
                    temkun = kunjTable.getValueAt(i, 0).toString();
                    if (newrow[0].equalsIgnoreCase(temkun)) {
                        JOptionPane.showMessageDialog(null, "输入的捆ID不能与之前的捆ID相同.");
                        return;
                    }
                }
            }
            Date mydate = BundleDeal.getDBTime();
            String kunDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(mydate);
            buildKunDate.add(kunDate);
            DefaultTableModel pokaModel = (DefaultTableModel) this.kunjTable.getModel();
            pokaModel.addRow(newrow);
            this.kunjTextField.requestFocus();
        }
        if (e.getSource() == this.guitaiidjTextField) {
            this.kunjTextField.selectAll();
            this.kunjTextField.requestFocus();
        }
        if (e.getSource() == this.guiyuanidjTextField) {
            this.guitaiidjTextField.selectAll();
            this.guitaiidjTextField.requestFocus();
        }
    }

    @Override
    public void focusGained(FocusEvent e) {
        if (e.getSource() == this.kunjTextField) {
            if (portLis != null) {
                portLis.setCurTextField(this.kunjTextField);
            }
        }
    }

    @Override
    public void focusLost(FocusEvent e) {

    }
}
